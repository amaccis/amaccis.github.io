<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Haskell on amaccis.blog</title><link>https://amaccis.github.io/tags/haskell/</link><description>Recent content in Haskell on amaccis.blog</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Thu, 09 Mar 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://amaccis.github.io/tags/haskell/index.xml" rel="self" type="application/rss+xml"/><item><title>Trying to learn Haskell - Pattern matching</title><link>https://amaccis.github.io/posts/trying-to-learn-haskell-pattern-matching/</link><pubDate>Thu, 09 Mar 2023 00:00:00 +0000</pubDate><guid>https://amaccis.github.io/posts/trying-to-learn-haskell-pattern-matching/</guid><description>The first time I read about Haskell pattern matching, Python slicing syntax came to my mind.
If you are not familiar with Python slicing, it&amp;rsquo;s easier than you think. Imagine you have a list of n items, and you want to get a subset of that list, let&amp;rsquo;s say you want all the items of the original list except for the first one. Python solves the problem in a simple and elegant way.</description></item><item><title>Trying to learn Haskell - Recursion</title><link>https://amaccis.github.io/posts/trying-to-learn-haskell-recursion/</link><pubDate>Sat, 04 Mar 2023 00:00:00 +0000</pubDate><guid>https://amaccis.github.io/posts/trying-to-learn-haskell-recursion/</guid><description>It&amp;rsquo;s a fact that we, bad programmers, avoid the recursion as much as we can. Maybe it&amp;rsquo;s a practice you absorb when you program with imperative languages or, somehow you&amp;rsquo;re pushed to think about optimization (iterative algorithms are often faster than recursive ones) or you tell yourself that recursion produces code hard to read, to debug and to maintain, but the fact is that whenever you can apply loops (almost always) you do it.</description></item><item><title>Trying to learn Haskell - List comprehensions</title><link>https://amaccis.github.io/posts/trying-to-learn-haskell-list-comprehensions/</link><pubDate>Sat, 25 Feb 2023 00:00:00 +0000</pubDate><guid>https://amaccis.github.io/posts/trying-to-learn-haskell-list-comprehensions/</guid><description>Every time I tried to learn functional programming, I hated it and I did not achieve any appreciable result. Probably it will go the same way this time too, anyway I thought to give functional programming, and in particular Haskell, one more chance. For this reason I&amp;rsquo;ve just started reading a beautiful book: Learn You a Haskell for Great Good!.
I thought I may write down all the interesting (or weird) things I find out, trying, if possible, to compare them with other things I already know.</description></item></channel></rss>